
import Project.ConnectionManager;
import java.awt.print.Printable;
import java.awt.print.PrinterException;
import java.awt.print.PrinterJob;
import java.sql.ResultSet;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Date;
import java.util.Vector;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author Admin
 */
public class CheckOut extends javax.swing.JFrame implements Runnable {

    /**
     * Creates new form CheckOut
     */
    public CheckOut() {
        initComponents();
        Thread t = new Thread((Runnable) this);
        t.start();
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jTextField2 = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jTextField3 = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jTextField4 = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jTextField5 = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jTextField6 = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jTextField7 = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        jTextField8 = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        jTextField9 = new javax.swing.JTextField();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jLabel11 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setLocation(new java.awt.Point(50, 118));
        setUndecorated(true);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setBackground(new java.awt.Color(102, 0, 0));
        jLabel1.setFont(new java.awt.Font("Algerian", 1, 14)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/Customer Check Out.png"))); // NOI18N
        jLabel1.setText("Customer Check Out");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 11, -1, -1));

        jButton2.setBackground(new java.awt.Color(102, 0, 0));
        jButton2.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        jButton2.setForeground(new java.awt.Color(255, 255, 255));
        jButton2.setText("Back");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(1190, 560, -1, -1));

        jLabel2.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        jLabel2.setText("Room Number");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(423, 79, -1, -1));

        jTextField1.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        getContentPane().add(jTextField1, new org.netbeans.lib.awtextra.AbsoluteConstraints(517, 76, 300, -1));

        jButton1.setBackground(new java.awt.Color(102, 0, 0));
        jButton1.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jButton1.setForeground(new java.awt.Color(255, 255, 255));
        jButton1.setText("Search");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(835, 73, -1, -1));

        jLabel3.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        jLabel3.setText("Customer Name");
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 160, -1, -1));

        jTextField2.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        getContentPane().add(jTextField2, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 180, 250, -1));

        jLabel4.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        jLabel4.setText("Check In Date");
        getContentPane().add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(710, 160, -1, -1));

        jTextField3.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        getContentPane().add(jTextField3, new org.netbeans.lib.awtextra.AbsoluteConstraints(710, 180, 250, -1));

        jLabel5.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        jLabel5.setText("Check Out Date (Today)");
        getContentPane().add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 230, -1, -1));

        jTextField4.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        getContentPane().add(jTextField4, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 250, 250, -1));

        jLabel6.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        jLabel6.setText("Mobile Number");
        getContentPane().add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(710, 230, -1, -1));

        jTextField5.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        getContentPane().add(jTextField5, new org.netbeans.lib.awtextra.AbsoluteConstraints(710, 250, 250, -1));

        jLabel7.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        jLabel7.setText("NIC");
        getContentPane().add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 290, -1, -1));

        jTextField6.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        getContentPane().add(jTextField6, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 310, 250, -1));

        jLabel8.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        jLabel8.setText("Number Of Days Stay");
        getContentPane().add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 350, -1, -1));

        jTextField7.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        getContentPane().add(jTextField7, new org.netbeans.lib.awtextra.AbsoluteConstraints(710, 310, 250, -1));

        jLabel9.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        jLabel9.setText("Total Amount");
        getContentPane().add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(710, 350, -1, -1));

        jTextField8.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        getContentPane().add(jTextField8, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 370, 250, -1));

        jLabel10.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        jLabel10.setText("Email");
        getContentPane().add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(710, 290, -1, -1));

        jTextField9.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        getContentPane().add(jTextField9, new org.netbeans.lib.awtextra.AbsoluteConstraints(710, 370, 250, -1));

        jButton3.setBackground(new java.awt.Color(102, 0, 0));
        jButton3.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jButton3.setForeground(new java.awt.Color(255, 255, 255));
        jButton3.setText("Check Out");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton3, new org.netbeans.lib.awtextra.AbsoluteConstraints(540, 450, -1, -1));

        jButton4.setBackground(new java.awt.Color(102, 0, 0));
        jButton4.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jButton4.setForeground(new java.awt.Color(255, 255, 255));
        jButton4.setText("Clear");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton4, new org.netbeans.lib.awtextra.AbsoluteConstraints(700, 450, -1, -1));

        jLabel11.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/all pages background.png"))); // NOI18N
        getContentPane().add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // back button
        
        this.dispose();
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
    String searchValue = jTextField1.getText(); // Get the search value from the text field

    String query = "SELECT * FROM customer WHERE roomNo = '" + searchValue + "' ORDER BY id DESC LIMIT 1";

    try {
       ResultSet resultSet = ConnectionManager.search(query);
      if (resultSet.next()) {
        String roomNoStr = resultSet.getString("roomNo");

        // Check room status in the room table
        String roomStatusQuery = "SELECT status FROM room WHERE roomNo = '" + roomNoStr + "'";
        ResultSet roomStatusResultSet = ConnectionManager.search(roomStatusQuery);
        if (roomStatusResultSet.next()) {
            String roomStatus = roomStatusResultSet.getString("status");
            if (roomStatus.equals("booked")) {
                // Display customer data
                jTextField2.setText(resultSet.getString("name"));
                jTextField3.setText(resultSet.getString("checkIn"));   
                jTextField5.setText(resultSet.getString("mobile"));
                jTextField6.setText(resultSet.getString("nic"));
                jTextField7.setText(resultSet.getString("email"));

                // Get the check-out date from the text field
                String checkOutDateStr = jTextField4.getText();

                if (checkOutDateStr != null && !checkOutDateStr.isEmpty()) {
                    SimpleDateFormat sdf = new SimpleDateFormat("yyyy/MM/dd");
                    try {
                        Date checkInDate = sdf.parse(resultSet.getString("checkIn"));
                        Date checkOutDate = sdf.parse(checkOutDateStr);


                        long diffInMillis = checkOutDate.getTime() - checkInDate.getTime();
                        int numDays = (int) (diffInMillis / (1000 * 60 * 60 * 24));

                        // If the number of days is 0 or less, set it to 1
                        if (numDays <= 0) {
                            numDays = 1;
                        }

                        jTextField8.setText(String.valueOf(numDays));

                        // Get the room price from the room table
                        String roomPriceQuery = "SELECT price FROM room WHERE roomNo = '" + roomNoStr + "'";
                        ResultSet roomPriceResultSet = ConnectionManager.search(roomPriceQuery);
                        if (roomPriceResultSet.next()) {
                            int pricePerDay = roomPriceResultSet.getInt("price");
                            int totalAmount = numDays * pricePerDay;
                            jTextField9.setText(String.valueOf(totalAmount));
                        } else {
                            jTextField9.setText("");
                        }
                    } catch (Exception e) {
                        JOptionPane.showMessageDialog(null, "Error parsing dates: " + e.getMessage(), "Date Error", JOptionPane.ERROR_MESSAGE);
                    }
                } else {
                    jTextField8.setText("");
                    jTextField9.setText("");
                }
            } else {
                clearFields();
                JOptionPane.showMessageDialog(null, "Room is not available.", "Room Status", JOptionPane.INFORMATION_MESSAGE);
            }
        } else {
            JOptionPane.showMessageDialog(null, "Error fetching room status.", "Error", JOptionPane.ERROR_MESSAGE);
        }
    } else {
        JOptionPane.showMessageDialog(null, "No data found for the search criteria.", "Search Result", JOptionPane.INFORMATION_MESSAGE);
    }
    resultSet.close();
    } catch (Exception ex) {
     ex.printStackTrace();
        JOptionPane.showMessageDialog(null, "Error fetching data: " + ex.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
}
        
    }//GEN-LAST:event_jButton1ActionPerformed
    public void clearFields(){
         jTextField1.setText("");
        jTextField2.setText("");
        jTextField3.setText("");
        jTextField4.setText("");
        jTextField5.setText("");
        jTextField6.setText("");
        jTextField7.setText("");
        jTextField8.setText("");
        jTextField9.setText("");
    }
    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // clear Button
        
        jTextField1.setText("");
        jTextField2.setText("");
        jTextField3.setText("");
        jTextField4.setText("");
        jTextField5.setText("");
        jTextField6.setText("");
        jTextField7.setText("");
        jTextField8.setText("");
        jTextField9.setText("");
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        //check out button
        String roomNo = jTextField1.getText();
        String name = jTextField2.getText();
        String checkinDate = jTextField3.getText(); 
        String checkOutDate = jTextField4.getText();
        String mobile = jTextField5.getText(); 
        String nic = jTextField6.getText(); 
        String email = jTextField7.getText(); 
        String daysStayed = jTextField8.getText(); 
        String totalAmount = jTextField9.getText();

        // Validate total amount
        if (!totalAmount.isEmpty()) {
            try {
                ResultSet rs = ConnectionManager.search("SELECT * FROM customer WHERE roomNo='" + roomNo + "'");
                if (rs.next()) {
                    
                     // Update room status to "booked"
                    ConnectionManager.iud("UPDATE room SET status = 'false' WHERE roomNo = '" + roomNo + "'");
             
                    ConnectionManager.iud("UPDATE customer SET  daysStay=" + daysStayed + ",  total=" + totalAmount + ", checkOut='" + checkOutDate + "'  WHERE roomNo='" + roomNo + "'");
                    

                    JOptionPane.showMessageDialog(null, "Check-Out successful");

                    
                    jTextField1.setText("");
                    jTextField2.setText("");
                    jTextField3.setText("");
                    jTextField4.setText("");
                    jTextField5.setText("");
                    jTextField6.setText("");
                    jTextField7.setText("");
                    jTextField8.setText("");
                    jTextField9.setText("");

                    // Print receipt
                    StringBuilder printableText = new StringBuilder();
                    printableText.append("Hotel Management System\n");
                    printableText.append("Date: ").append(checkOutDate).append("\n");
                    printableText.append("******************************************************\n");

                    printableText.append("Room No: ").append(roomNo).append("\n");
                    printableText.append("Name: ").append(name).append("\n");
                    printableText.append("Check In Date: ").append(checkinDate).append("\n");
                    printableText.append("Check Out Date: ").append(checkOutDate).append("\n");
                    printableText.append("Mobile: ").append(mobile).append("\n");
                    printableText.append("NIC: ").append(nic).append("\n");
                    printableText.append("Email: ").append(email).append("\n");
                    printableText.append("Number Of Days Stayed: ").append(daysStayed).append("\n");
                    printableText.append("Total Bill Amount: ").append(totalAmount).append("\n");

                    printableText.append("******************************************************\n");
                    printableText.append("\nThank you for staying with us.");

                    PrinterJob printerJob = PrinterJob.getPrinterJob();
                    printerJob.setPrintable((graphics, pageFormat, pageIndex) -> {
                        if (pageIndex > 0) {
                            return Printable.NO_SUCH_PAGE;
                        }
                        int x = 100; // X-coordinate for printing
                        int y = 100; // Y-coordinate for printing
                        String[] lines = printableText.toString().split("\n");
                        for (String line : lines) {
                            graphics.drawString(line, x, y);
                            y += 20; // Move to the next line
                        }
                        return Printable.PAGE_EXISTS;
                    });

                    if (printerJob.printDialog()) {
                        try {
                            printerJob.print();
                        } catch (PrinterException ex) {
                            JOptionPane.showMessageDialog(this, "Printing failed: " + ex.getMessage(),
                                    "Print Error", JOptionPane.ERROR_MESSAGE);
                        }
                    }
                } else {
                    JOptionPane.showMessageDialog(null, "Room Number not found");
                }
            } catch (Exception e) {
                e.printStackTrace();
                JOptionPane.showMessageDialog(null, "Error during check-out");
            }
        } else {
            JOptionPane.showMessageDialog(null, "Total amount is required.");
          }
        
       
     
    }//GEN-LAST:event_jButton3ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CheckOut.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CheckOut.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CheckOut.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CheckOut.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new CheckOut().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextField3;
    private javax.swing.JTextField jTextField4;
    private javax.swing.JTextField jTextField5;
    private javax.swing.JTextField jTextField6;
    private javax.swing.JTextField jTextField7;
    private javax.swing.JTextField jTextField8;
    private javax.swing.JTextField jTextField9;
    // End of variables declaration//GEN-END:variables

    @Override
    public void run() {
                
                while(true){
                try {

                    Calendar c = Calendar.getInstance();

                    int day = c.get(Calendar.DAY_OF_MONTH);
                    int month = c.get(Calendar.MONTH);
                    int year = c.get(Calendar.YEAR);
                    SimpleDateFormat date = new SimpleDateFormat("YYY/MM/dd");

                    Date d =c.getTime();
                    String displayDate = date.format(d);

                    jTextField4.setText(displayDate);

                 }catch (Exception e) {
                
                 }
            }
        
          }
}
